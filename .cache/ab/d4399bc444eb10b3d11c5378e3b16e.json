{"id":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","dependencies":[{"name":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/package.json","includedInParent":true,"mtime":1595955025549},{"name":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/@react-pdf/textkit/package.json","includedInParent":true,"mtime":1595955025109},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"@babel/runtime/helpers/interopRequireWildcard","loc":{"line":5,"column":38},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/@babel/runtime/helpers/interopRequireWildcard.js"},{"name":"ramda","loc":{"line":10,"column":40},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/ramda/es/index.js"},{"name":"hyphen","loc":{"line":12,"column":45},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/hyphen/index.js"},{"name":"hyphen/patterns/en-us","loc":{"line":14,"column":43},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/hyphen/patterns/en-us.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _hyphen = _interopRequireDefault(require(\"hyphen\"));\n\nvar _enUs = _interopRequireDefault(require(\"hyphen/patterns/en-us\"));\n\nvar SOFT_HYPHEN = \"\\xAD\";\nvar hyphenator = (0, _hyphen[\"default\"])(_enUs[\"default\"]);\nvar splitHyphen = R.split(SOFT_HYPHEN);\nvar cache = {};\nvar getParts = R.ifElse(R.contains(SOFT_HYPHEN), splitHyphen, R.o(splitHyphen, hyphenator));\n\nvar wordHyphenation = function wordHyphenation(options, word) {\n  if (R.isNil(word)) return [];\n  if (cache[word]) return cache[word];\n  cache[word] = getParts(word);\n  return cache[word];\n};\n\nvar _default = R.curryN(2, wordHyphenation);\n\nexports[\"default\"] = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"../node_modules/@react-pdf/textkit/engines/wordHyphenation/index.js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _hyphen = _interopRequireDefault(require(\"hyphen\"));\n\nvar _enUs = _interopRequireDefault(require(\"hyphen/patterns/en-us\"));\n\nvar SOFT_HYPHEN = \"\\xAD\";\nvar hyphenator = (0, _hyphen[\"default\"])(_enUs[\"default\"]);\nvar splitHyphen = R.split(SOFT_HYPHEN);\nvar cache = {};\nvar getParts = R.ifElse(R.contains(SOFT_HYPHEN), splitHyphen, R.o(splitHyphen, hyphenator));\n\nvar wordHyphenation = function wordHyphenation(options, word) {\n  if (R.isNil(word)) return [];\n  if (cache[word]) return cache[word];\n  cache[word] = getParts(word);\n  return cache[word];\n};\n\nvar _default = R.curryN(2, wordHyphenation);\n\nexports[\"default\"] = _default;"},"lineCount":31}},"error":null,"hash":"9cc56e15d24017699adf4caadb80090d","cacheData":{"env":{}}}
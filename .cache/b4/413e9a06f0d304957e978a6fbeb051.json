{"id":"../node_modules/hyphen/hyphen.js","dependencies":[{"name":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/package.json","includedInParent":true,"mtime":1595955025549},{"name":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/hyphen/package.json","includedInParent":true,"mtime":1595955025108}],"generated":{"js":"var define;\nvar global = arguments[3];\n/** Text hyphenation in Javascript.\n *  Copyright (C) 2020 Yevhen Tiurin (yevhentiurin@gmail.com)\n *  https://github.com/ytiurin/hyphen\n *\n *  Released under the ISC license\n *  https://github.com/ytiurin/hyphen/blob/master/LICENSE\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.createHyphenator = factory();\n  }\n})(this, function () {\n  var MIN_WORD_LENGTH_BOUNDRY = 5;\n\n  var SETTING_DEFAULT_ASYNC = false,\n    SETTING_DEFAULT_DEBUG = false,\n    SETTING_DEFAULT_HTML = false,\n    SETTING_DEFAULT_HYPH_CHAR = \"\\u00AD\",\n    SETTING_NAME_ASYNC = \"async\",\n    SETTING_NAME_DEBUG = \"debug\",\n    SETTING_NAME_HTML = \"html\",\n    SETTING_NAME_HYPH_CHAR = \"hyphenChar\",\n    SETTING_NAME_MIN_WORD_LENGTH = \"minWordLength\";\n\n  var _global =\n    typeof global === \"object\"\n      ? global\n      : typeof window === \"object\"\n      ? window\n      : typeof this === \"object\"\n      ? this\n      : {};\n\n  function cloneObj(source) {\n    var target = {};\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n\n  function keyOrDefault(object, key, defaultValue) {\n    if (key in object) {\n      return object[key];\n    }\n    return defaultValue;\n  }\n\n  function exceptionsFromDefinition(patternsDefinition, hyphenChar) {\n    return patternsDefinition.exceptions.reduce(function (\n      exceptions,\n      exception\n    ) {\n      exceptions[exception.replace(/\\-/g, \"\")] = exception.replace(\n        /\\-/g,\n        hyphenChar\n      );\n      return exceptions;\n    },\n    {});\n  }\n\n  function createHyphenator(patternsDefinition, options) {\n    options = options || {};\n    var //\n      asyncMode = keyOrDefault(\n        options,\n        SETTING_NAME_ASYNC,\n        SETTING_DEFAULT_ASYNC\n      ),\n      caches = {},\n      debug = keyOrDefault(options, SETTING_NAME_DEBUG, SETTING_DEFAULT_DEBUG),\n      exceptions = {},\n      hyphenChar = keyOrDefault(\n        options,\n        SETTING_NAME_HYPH_CHAR,\n        SETTING_DEFAULT_HYPH_CHAR\n      ),\n      patterns = patternsDefinition.patterns.map(preprocessPattern),\n      minWordLength = Math.max(\n        options[SETTING_NAME_MIN_WORD_LENGTH] >> 0,\n        MIN_WORD_LENGTH_BOUNDRY\n      ),\n      skipHTML = keyOrDefault(options, SETTING_NAME_HTML, SETTING_DEFAULT_HTML);\n\n    // Prepare cache\n    var cacheKey = hyphenChar + minWordLength;\n    exceptions[cacheKey] = exceptionsFromDefinition(\n      patternsDefinition,\n      hyphenChar\n    );\n    caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n\n    if (asyncMode && !(\"Promise\" in _global)) {\n      throw new Error(\n        \"Failed to create hyphenator: Could not find global Promise object, needed for hyphenator to work in async mode\"\n      );\n    }\n\n    return function (text, options) {\n      options = options || {};\n\n      var localDebug = keyOrDefault(options, SETTING_NAME_DEBUG, debug),\n        localHyphenChar = keyOrDefault(\n          options,\n          SETTING_NAME_HYPH_CHAR,\n          hyphenChar\n        ),\n        localMinWordLength = Math.max(\n          options[SETTING_NAME_MIN_WORD_LENGTH] >> 0,\n          minWordLength\n        ),\n        cacheKey = localHyphenChar + localMinWordLength;\n\n      if (!exceptions[cacheKey]) {\n        exceptions[cacheKey] = exceptionsFromDefinition(\n          patternsDefinition,\n          localHyphenChar\n        );\n      }\n\n      if (!caches[cacheKey]) {\n        caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n      }\n\n      return start(\n        text,\n        patterns,\n        caches[cacheKey],\n        localDebug,\n        localHyphenChar,\n        skipHTML,\n        localMinWordLength,\n        asyncMode\n      );\n    };\n  }\n  function createTextChunkReader(text, hyphenChar, skipHTML, minWordLength) {\n    function readNextTextChunk() {\n      var nextTextChunk = \"\";\n\n      shouldHyphenate = void 0;\n\n      chunkReader: while (nextCharIndex <= text.length) {\n        var //\n          nextChar = text.charAt(nextCharIndex++),\n          charIsLetter =\n            !!nextChar && !/\\s|[\\!-\\@\\[-\\`\\{-\\~\\u2013-\\u203C]/.test(nextChar),\n          charIsAngleOpen = nextChar === \"<\",\n          charIsAngleClose = nextChar === \">\",\n          charIsHyphen = nextChar === hyphenChar;\n\n        do {\n          if (state === STATE_READ_TAG) {\n            if (charIsAngleClose) {\n              state = STATE_RETURN_UNTOUCHED;\n            }\n            break;\n          }\n\n          if (charIsHyphen) {\n            shouldHyphenate = SHOULD_SKIP;\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (charIsLetter) {\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (state === STATE_READ_WORD) {\n            state = STATE_RETURN_WORD;\n            shouldHyphenate =\n              shouldHyphenate ||\n              (nextTextChunk.length >= minWordLength && SHOULD_HYPHENATE);\n            break;\n          }\n\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_RETURN_UNTOUCHED;\n        } while (0);\n\n        if (\n          charIsAngleOpen &&\n          state !== STATE_RETURN_WORD &&\n          skipHTML &&\n          !isSpacelike(text.charAt(nextCharIndex))\n        ) {\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_READ_TAG;\n        }\n\n        switch (state) {\n          case STATE_READ_TAG:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_READ_WORD:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_RETURN_UNTOUCHED:\n            nextTextChunk += nextChar;\n            break chunkReader;\n\n          case STATE_RETURN_WORD:\n            nextCharIndex--;\n            break chunkReader;\n        }\n      }\n      return nextTextChunk || void 0;\n    }\n\n    function shouldNextHyphenate() {\n      return shouldHyphenate === SHOULD_HYPHENATE;\n    }\n\n    var isSpacelike = RegExp.prototype.test.bind(/\\s/);\n\n    var //\n      nextCharIndex = 0,\n      SHOULD_HYPHENATE = 1,\n      SHOULD_SKIP = 2,\n      shouldHyphenate,\n      STATE_READ_TAG = 1,\n      STATE_READ_WORD = 2,\n      STATE_RETURN_UNTOUCHED = 3,\n      STATE_RETURN_WORD = 4,\n      state;\n\n    return [readNextTextChunk, shouldNextHyphenate];\n  }\n  function hyphenateWord(text, patterns, debug, hyphenChar) {\n    var //\n      levels = new Array(text.length + 1),\n      loweredText = text.toLocaleLowerCase(),\n      p = [],\n      patternData,\n      patternIndex = 0;\n\n    for (var i = levels.length; i--; ) levels[i] = 0;\n\n    while ((patternData = patterns[patternIndex++])) {\n      var //\n        fromChar = 0,\n        endPattern = false;\n      while (!endPattern) {\n        var //\n          patternEntityIndex = loweredText.indexOf(patternData.text, fromChar),\n          patternFits =\n            patternEntityIndex > -1 &&\n            (patternData.stickToLeft ? patternEntityIndex === 0 : true) &&\n            (patternData.stickToRight\n              ? patternEntityIndex + patternData.text.length === text.length\n              : true);\n\n        if (patternFits) {\n          p.push(patternData.pattern + \">\" + patternData.levels.join(\"\"));\n\n          for (var i = 0; i < patternData.levels.length; i++)\n            levels[patternEntityIndex + i] = Math.max(\n              patternData.levels[i],\n              levels[patternEntityIndex + i]\n            );\n        }\n        if (patternEntityIndex > -1 && patternData.text.length > 0) {\n          fromChar = patternEntityIndex + patternData.text.length + 1;\n        } else {\n          endPattern = true;\n        }\n      }\n    }\n\n    levels[0] = levels[1] = levels[levels.length - 1] = levels[\n      levels.length - 2\n    ] = 0;\n\n    var //\n      hyphenatedText = \"\",\n      leveledText = \"\",\n      debugHyphenatedText = \"\";\n\n    for (var i = 0; i < levels.length; i++) {\n      hyphenatedText +=\n        (levels[i] % 2 === 1 ? hyphenChar : \"\") + text.charAt(i);\n      debugHyphenatedText += (levels[i] % 2 === 1 ? \"-\" : \"\") + text.charAt(i);\n      leveledText += (levels[i] > 0 ? levels[i] : \"\") + text.charAt(i);\n    }\n\n    if (debug)\n      console.log.apply(\n        console,\n        [text, \"->\"]\n          .concat(p)\n          .concat([\"->\"])\n          .concat(levels)\n          .concat([\"->\", leveledText])\n          .concat([\"->\", debugHyphenatedText])\n      );\n\n    return hyphenatedText;\n  }\n  function preprocessPattern(pattern) {\n    var //\n      patternCharIndex = 0,\n      patternChar,\n      patternData = {\n        pattern: pattern,\n        text: \"\",\n        levels: [],\n        stickToLeft: 0,\n        stickToRight: 0\n      },\n      states = { alphabet: 1, level: 2, stickToLeft: 3, stickToRight: 4 };\n\n    while ((patternChar = pattern.charAt(patternCharIndex++))) {\n      var //\n        charIsDot = patternChar === \".\",\n        charIsNumber = !charIsDot && /\\d/.test(patternChar),\n        state = charIsDot\n          ? patternCharIndex - 1 === 0\n            ? states.stickToLeft\n            : states.stickToRight\n          : charIsNumber\n          ? states.level\n          : states.alphabet;\n\n      switch (state) {\n        case states.alphabet:\n          !prevCharIsNumber && patternData.levels.push(0);\n          patternData.text += patternChar;\n          break;\n\n        case states.level:\n          patternData.levels.push(parseInt(patternChar));\n          break;\n\n        case states.stickToLeft:\n          patternData.stickToLeft = true;\n          break;\n\n        case states.stickToRight:\n          patternData.stickToRight = true;\n          break;\n      }\n\n      var prevCharIsNumber = charIsNumber;\n    }\n\n    return patternData;\n  }\n  function start(\n    text,\n    patterns,\n    cache,\n    debug,\n    hyphenChar,\n    skipHTML,\n    minWordLength,\n    isAsync\n  ) {\n    function done() {\n      allTime = new Date() - allTime;\n      resolveNewText(newText);\n\n      if (debug) {\n        console.log(\n          \"----------------\\nHyphenation stats: \" +\n            processedN +\n            \" text chunks processed, \" +\n            hyphenatedN +\n            \" words hyphenated\"\n        );\n        console.log(\"Work time: \" + workTime / 1000);\n        console.log(\"Wait time: \" + (allTime - workTime) / 1000);\n        console.log(\"All time: \" + allTime / 1000);\n      }\n    }\n\n    var //\n      newText = \"\",\n      nextTextChunk,\n      reader = createTextChunkReader(text, hyphenChar, skipHTML, minWordLength),\n      readNextTextChunk = reader[0],\n      shouldNextHyphenate = reader[1],\n      states = { hyphenateWord: 1, concatenate: 2 },\n      processedN = 0,\n      hyphenatedN = 0;\n\n    var //\n      allTime = new Date(),\n      workTime = 0;\n\n    var resolveNewText = function () {};\n\n    function nextTick() {\n      var loopStart = new Date();\n\n      while (\n        (!isAsync || new Date() - loopStart < 10) &&\n        (nextTextChunk = readNextTextChunk())\n      ) {\n        var state = shouldNextHyphenate()\n          ? states.hyphenateWord\n          : states.concatenate;\n\n        switch (state) {\n          case states.hyphenateWord:\n            if (!cache[nextTextChunk])\n              cache[nextTextChunk] = hyphenateWord(\n                nextTextChunk,\n                patterns,\n                debug,\n                hyphenChar\n              );\n\n            if (nextTextChunk !== cache[nextTextChunk]) hyphenatedN++;\n\n            nextTextChunk = cache[nextTextChunk];\n\n          case states.concatenate:\n            newText += nextTextChunk;\n        }\n\n        processedN++;\n      }\n      workTime += new Date() - loopStart;\n\n      if (!nextTextChunk) {\n        done();\n      } else {\n        setTimeout(nextTick);\n      }\n    }\n\n    if (isAsync) {\n      setTimeout(nextTick);\n      return new Promise(function (resolve) {\n        resolveNewText = resolve;\n      });\n    } else {\n      nextTick();\n      return newText;\n    }\n  }\n\n  return createHyphenator;\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/hyphen/hyphen.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/hyphen/hyphen.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}}],"sources":{"../node_modules/hyphen/hyphen.js":"/** Text hyphenation in Javascript.\n *  Copyright (C) 2020 Yevhen Tiurin (yevhentiurin@gmail.com)\n *  https://github.com/ytiurin/hyphen\n *\n *  Released under the ISC license\n *  https://github.com/ytiurin/hyphen/blob/master/LICENSE\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.createHyphenator = factory();\n  }\n})(this, function () {\n  var MIN_WORD_LENGTH_BOUNDRY = 5;\n\n  var SETTING_DEFAULT_ASYNC = false,\n    SETTING_DEFAULT_DEBUG = false,\n    SETTING_DEFAULT_HTML = false,\n    SETTING_DEFAULT_HYPH_CHAR = \"\\u00AD\",\n    SETTING_NAME_ASYNC = \"async\",\n    SETTING_NAME_DEBUG = \"debug\",\n    SETTING_NAME_HTML = \"html\",\n    SETTING_NAME_HYPH_CHAR = \"hyphenChar\",\n    SETTING_NAME_MIN_WORD_LENGTH = \"minWordLength\";\n\n  var _global =\n    typeof global === \"object\"\n      ? global\n      : typeof window === \"object\"\n      ? window\n      : typeof this === \"object\"\n      ? this\n      : {};\n\n  function cloneObj(source) {\n    var target = {};\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n\n  function keyOrDefault(object, key, defaultValue) {\n    if (key in object) {\n      return object[key];\n    }\n    return defaultValue;\n  }\n\n  function exceptionsFromDefinition(patternsDefinition, hyphenChar) {\n    return patternsDefinition.exceptions.reduce(function (\n      exceptions,\n      exception\n    ) {\n      exceptions[exception.replace(/\\-/g, \"\")] = exception.replace(\n        /\\-/g,\n        hyphenChar\n      );\n      return exceptions;\n    },\n    {});\n  }\n\n  function createHyphenator(patternsDefinition, options) {\n    options = options || {};\n    var //\n      asyncMode = keyOrDefault(\n        options,\n        SETTING_NAME_ASYNC,\n        SETTING_DEFAULT_ASYNC\n      ),\n      caches = {},\n      debug = keyOrDefault(options, SETTING_NAME_DEBUG, SETTING_DEFAULT_DEBUG),\n      exceptions = {},\n      hyphenChar = keyOrDefault(\n        options,\n        SETTING_NAME_HYPH_CHAR,\n        SETTING_DEFAULT_HYPH_CHAR\n      ),\n      patterns = patternsDefinition.patterns.map(preprocessPattern),\n      minWordLength = Math.max(\n        options[SETTING_NAME_MIN_WORD_LENGTH] >> 0,\n        MIN_WORD_LENGTH_BOUNDRY\n      ),\n      skipHTML = keyOrDefault(options, SETTING_NAME_HTML, SETTING_DEFAULT_HTML);\n\n    // Prepare cache\n    var cacheKey = hyphenChar + minWordLength;\n    exceptions[cacheKey] = exceptionsFromDefinition(\n      patternsDefinition,\n      hyphenChar\n    );\n    caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n\n    if (asyncMode && !(\"Promise\" in _global)) {\n      throw new Error(\n        \"Failed to create hyphenator: Could not find global Promise object, needed for hyphenator to work in async mode\"\n      );\n    }\n\n    return function (text, options) {\n      options = options || {};\n\n      var localDebug = keyOrDefault(options, SETTING_NAME_DEBUG, debug),\n        localHyphenChar = keyOrDefault(\n          options,\n          SETTING_NAME_HYPH_CHAR,\n          hyphenChar\n        ),\n        localMinWordLength = Math.max(\n          options[SETTING_NAME_MIN_WORD_LENGTH] >> 0,\n          minWordLength\n        ),\n        cacheKey = localHyphenChar + localMinWordLength;\n\n      if (!exceptions[cacheKey]) {\n        exceptions[cacheKey] = exceptionsFromDefinition(\n          patternsDefinition,\n          localHyphenChar\n        );\n      }\n\n      if (!caches[cacheKey]) {\n        caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n      }\n\n      return start(\n        text,\n        patterns,\n        caches[cacheKey],\n        localDebug,\n        localHyphenChar,\n        skipHTML,\n        localMinWordLength,\n        asyncMode\n      );\n    };\n  }\n  function createTextChunkReader(text, hyphenChar, skipHTML, minWordLength) {\n    function readNextTextChunk() {\n      var nextTextChunk = \"\";\n\n      shouldHyphenate = void 0;\n\n      chunkReader: while (nextCharIndex <= text.length) {\n        var //\n          nextChar = text.charAt(nextCharIndex++),\n          charIsLetter =\n            !!nextChar && !/\\s|[\\!-\\@\\[-\\`\\{-\\~\\u2013-\\u203C]/.test(nextChar),\n          charIsAngleOpen = nextChar === \"<\",\n          charIsAngleClose = nextChar === \">\",\n          charIsHyphen = nextChar === hyphenChar;\n\n        do {\n          if (state === STATE_READ_TAG) {\n            if (charIsAngleClose) {\n              state = STATE_RETURN_UNTOUCHED;\n            }\n            break;\n          }\n\n          if (charIsHyphen) {\n            shouldHyphenate = SHOULD_SKIP;\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (charIsLetter) {\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (state === STATE_READ_WORD) {\n            state = STATE_RETURN_WORD;\n            shouldHyphenate =\n              shouldHyphenate ||\n              (nextTextChunk.length >= minWordLength && SHOULD_HYPHENATE);\n            break;\n          }\n\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_RETURN_UNTOUCHED;\n        } while (0);\n\n        if (\n          charIsAngleOpen &&\n          state !== STATE_RETURN_WORD &&\n          skipHTML &&\n          !isSpacelike(text.charAt(nextCharIndex))\n        ) {\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_READ_TAG;\n        }\n\n        switch (state) {\n          case STATE_READ_TAG:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_READ_WORD:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_RETURN_UNTOUCHED:\n            nextTextChunk += nextChar;\n            break chunkReader;\n\n          case STATE_RETURN_WORD:\n            nextCharIndex--;\n            break chunkReader;\n        }\n      }\n      return nextTextChunk || void 0;\n    }\n\n    function shouldNextHyphenate() {\n      return shouldHyphenate === SHOULD_HYPHENATE;\n    }\n\n    var isSpacelike = RegExp.prototype.test.bind(/\\s/);\n\n    var //\n      nextCharIndex = 0,\n      SHOULD_HYPHENATE = 1,\n      SHOULD_SKIP = 2,\n      shouldHyphenate,\n      STATE_READ_TAG = 1,\n      STATE_READ_WORD = 2,\n      STATE_RETURN_UNTOUCHED = 3,\n      STATE_RETURN_WORD = 4,\n      state;\n\n    return [readNextTextChunk, shouldNextHyphenate];\n  }\n  function hyphenateWord(text, patterns, debug, hyphenChar) {\n    var //\n      levels = new Array(text.length + 1),\n      loweredText = text.toLocaleLowerCase(),\n      p = [],\n      patternData,\n      patternIndex = 0;\n\n    for (var i = levels.length; i--; ) levels[i] = 0;\n\n    while ((patternData = patterns[patternIndex++])) {\n      var //\n        fromChar = 0,\n        endPattern = false;\n      while (!endPattern) {\n        var //\n          patternEntityIndex = loweredText.indexOf(patternData.text, fromChar),\n          patternFits =\n            patternEntityIndex > -1 &&\n            (patternData.stickToLeft ? patternEntityIndex === 0 : true) &&\n            (patternData.stickToRight\n              ? patternEntityIndex + patternData.text.length === text.length\n              : true);\n\n        if (patternFits) {\n          p.push(patternData.pattern + \">\" + patternData.levels.join(\"\"));\n\n          for (var i = 0; i < patternData.levels.length; i++)\n            levels[patternEntityIndex + i] = Math.max(\n              patternData.levels[i],\n              levels[patternEntityIndex + i]\n            );\n        }\n        if (patternEntityIndex > -1 && patternData.text.length > 0) {\n          fromChar = patternEntityIndex + patternData.text.length + 1;\n        } else {\n          endPattern = true;\n        }\n      }\n    }\n\n    levels[0] = levels[1] = levels[levels.length - 1] = levels[\n      levels.length - 2\n    ] = 0;\n\n    var //\n      hyphenatedText = \"\",\n      leveledText = \"\",\n      debugHyphenatedText = \"\";\n\n    for (var i = 0; i < levels.length; i++) {\n      hyphenatedText +=\n        (levels[i] % 2 === 1 ? hyphenChar : \"\") + text.charAt(i);\n      debugHyphenatedText += (levels[i] % 2 === 1 ? \"-\" : \"\") + text.charAt(i);\n      leveledText += (levels[i] > 0 ? levels[i] : \"\") + text.charAt(i);\n    }\n\n    if (debug)\n      console.log.apply(\n        console,\n        [text, \"->\"]\n          .concat(p)\n          .concat([\"->\"])\n          .concat(levels)\n          .concat([\"->\", leveledText])\n          .concat([\"->\", debugHyphenatedText])\n      );\n\n    return hyphenatedText;\n  }\n  function preprocessPattern(pattern) {\n    var //\n      patternCharIndex = 0,\n      patternChar,\n      patternData = {\n        pattern: pattern,\n        text: \"\",\n        levels: [],\n        stickToLeft: 0,\n        stickToRight: 0\n      },\n      states = { alphabet: 1, level: 2, stickToLeft: 3, stickToRight: 4 };\n\n    while ((patternChar = pattern.charAt(patternCharIndex++))) {\n      var //\n        charIsDot = patternChar === \".\",\n        charIsNumber = !charIsDot && /\\d/.test(patternChar),\n        state = charIsDot\n          ? patternCharIndex - 1 === 0\n            ? states.stickToLeft\n            : states.stickToRight\n          : charIsNumber\n          ? states.level\n          : states.alphabet;\n\n      switch (state) {\n        case states.alphabet:\n          !prevCharIsNumber && patternData.levels.push(0);\n          patternData.text += patternChar;\n          break;\n\n        case states.level:\n          patternData.levels.push(parseInt(patternChar));\n          break;\n\n        case states.stickToLeft:\n          patternData.stickToLeft = true;\n          break;\n\n        case states.stickToRight:\n          patternData.stickToRight = true;\n          break;\n      }\n\n      var prevCharIsNumber = charIsNumber;\n    }\n\n    return patternData;\n  }\n  function start(\n    text,\n    patterns,\n    cache,\n    debug,\n    hyphenChar,\n    skipHTML,\n    minWordLength,\n    isAsync\n  ) {\n    function done() {\n      allTime = new Date() - allTime;\n      resolveNewText(newText);\n\n      if (debug) {\n        console.log(\n          \"----------------\\nHyphenation stats: \" +\n            processedN +\n            \" text chunks processed, \" +\n            hyphenatedN +\n            \" words hyphenated\"\n        );\n        console.log(\"Work time: \" + workTime / 1000);\n        console.log(\"Wait time: \" + (allTime - workTime) / 1000);\n        console.log(\"All time: \" + allTime / 1000);\n      }\n    }\n\n    var //\n      newText = \"\",\n      nextTextChunk,\n      reader = createTextChunkReader(text, hyphenChar, skipHTML, minWordLength),\n      readNextTextChunk = reader[0],\n      shouldNextHyphenate = reader[1],\n      states = { hyphenateWord: 1, concatenate: 2 },\n      processedN = 0,\n      hyphenatedN = 0;\n\n    var //\n      allTime = new Date(),\n      workTime = 0;\n\n    var resolveNewText = function () {};\n\n    function nextTick() {\n      var loopStart = new Date();\n\n      while (\n        (!isAsync || new Date() - loopStart < 10) &&\n        (nextTextChunk = readNextTextChunk())\n      ) {\n        var state = shouldNextHyphenate()\n          ? states.hyphenateWord\n          : states.concatenate;\n\n        switch (state) {\n          case states.hyphenateWord:\n            if (!cache[nextTextChunk])\n              cache[nextTextChunk] = hyphenateWord(\n                nextTextChunk,\n                patterns,\n                debug,\n                hyphenChar\n              );\n\n            if (nextTextChunk !== cache[nextTextChunk]) hyphenatedN++;\n\n            nextTextChunk = cache[nextTextChunk];\n\n          case states.concatenate:\n            newText += nextTextChunk;\n        }\n\n        processedN++;\n      }\n      workTime += new Date() - loopStart;\n\n      if (!nextTextChunk) {\n        done();\n      } else {\n        setTimeout(nextTick);\n      }\n    }\n\n    if (isAsync) {\n      setTimeout(nextTick);\n      return new Promise(function (resolve) {\n        resolveNewText = resolve;\n      });\n    } else {\n      nextTick();\n      return newText;\n    }\n  }\n\n  return createHyphenator;\n});\n"},"lineCount":461}},"error":null,"hash":"57696d9a0cadae3e9d9135c9ee57e03c","cacheData":{"env":{}}}
{"id":"../node_modules/globalize/dist/globalize/plural.js","dependencies":[{"name":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/package.json","includedInParent":true,"mtime":1598634813460},{"name":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/globalize/package.json","includedInParent":true,"mtime":1596458300120},{"name":"cldrjs","loc":{"line":31,"column":37},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/globalize/dist/globalize/plural.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/cldrjs/dist/node_main.js"},{"name":"../globalize","loc":{"line":31,"column":58},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/globalize/dist/globalize/plural.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/globalize/dist/globalize.js"}],"generated":{"js":"var define;\n/**\n * Globalize v1.5.0\n *\n * http://github.com/jquery/globalize\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2020-03-25T12:19Z\n */\n/*!\n * Globalize v1.5.0 2020-03-25T12:19Z Released under the MIT license\n * http://git.io/TrdQbw\n */\n(function( root, factory ) {\n\n\t// UMD returnExports\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD\n\t\tdefine([\n\t\t\t\"cldr\",\n\t\t\t\"../globalize\",\n\t\t\t\"cldr/event\",\n\t\t\t\"cldr/supplemental\"\n\t\t], factory );\n\t} else if ( typeof exports === \"object\" ) {\n\n\t\t// Node, CommonJS\n\t\tmodule.exports = factory( require( \"cldrjs\" ), require( \"../globalize\" ) );\n\t} else {\n\n\t\t// Global\n\t\tfactory( root.Cldr, root.Globalize );\n\t}\n}(this, function( Cldr, Globalize ) {\n\nvar runtimeBind = Globalize._runtimeBind,\n\tvalidateCldr = Globalize._validateCldr,\n\tvalidateDefaultLocale = Globalize._validateDefaultLocale,\n\tvalidateParameterPresence = Globalize._validateParameterPresence,\n\tvalidateParameterType = Globalize._validateParameterType,\n\tvalidateParameterTypePlainObject = Globalize._validateParameterTypePlainObject;\nvar MakePlural;\n/* jshint ignore:start */\nMakePlural = (function() {\n'use strict';\n\nvar _toArray = function (arr) { return Array.isArray(arr) ? arr : Array.from(arr); };\n\nvar _toConsumableArray = function (arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\n/**\n * make-plural.js -- https://github.com/eemeli/make-plural.js/\n * Copyright (c) 2014-2015 by Eemeli Aro <eemeli@gmail.com>\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * The software is provided \"as is\" and the author disclaims all warranties\n * with regard to this software including all implied warranties of\n * merchantability and fitness. In no event shall the author be liable for\n * any special, direct, indirect, or consequential damages or any damages\n * whatsoever resulting from loss of use, data or profits, whether in an\n * action of contract, negligence or other tortious action, arising out of\n * or in connection with the use or performance of this software.\n */\n\nvar Parser = (function () {\n    function Parser() {\n        _classCallCheck(this, Parser);\n    }\n\n    _createClass(Parser, [{\n        key: 'parse',\n        value: function parse(cond) {\n            var _this = this;\n\n            if (cond === 'i = 0 or n = 1') {\n                return 'n >= 0 && n <= 1';\n            }if (cond === 'i = 0,1') {\n                return 'n >= 0 && n < 2';\n            }if (cond === 'i = 1 and v = 0') {\n                this.v0 = 1;\n                return 'n == 1 && v0';\n            }\n            return cond.replace(/([tv]) (!?)= 0/g, function (m, sym, noteq) {\n                var sn = sym + '0';\n                _this[sn] = 1;\n                return noteq ? '!' + sn : sn;\n            }).replace(/\\b[fintv]\\b/g, function (m) {\n                _this[m] = 1;\n                return m;\n            }).replace(/([fin]) % (10+)/g, function (m, sym, num) {\n                var sn = sym + num;\n                _this[sn] = 1;\n                return sn;\n            }).replace(/n10+ = 0/g, 't0 && $&').replace(/(\\w+ (!?)= )([0-9.]+,[0-9.,]+)/g, function (m, se, noteq, x) {\n                if (m === 'n = 0,1') return '(n == 0 || n == 1)';\n                if (noteq) return se + x.split(',').join(' && ' + se);\n                return '(' + se + x.split(',').join(' || ' + se) + ')';\n            }).replace(/(\\w+) (!?)= ([0-9]+)\\.\\.([0-9]+)/g, function (m, sym, noteq, x0, x1) {\n                if (Number(x0) + 1 === Number(x1)) {\n                    if (noteq) return '' + sym + ' != ' + x0 + ' && ' + sym + ' != ' + x1;\n                    return '(' + sym + ' == ' + x0 + ' || ' + sym + ' == ' + x1 + ')';\n                }\n                if (noteq) return '(' + sym + ' < ' + x0 + ' || ' + sym + ' > ' + x1 + ')';\n                if (sym === 'n') {\n                    _this.t0 = 1;return '(t0 && n >= ' + x0 + ' && n <= ' + x1 + ')';\n                }\n                return '(' + sym + ' >= ' + x0 + ' && ' + sym + ' <= ' + x1 + ')';\n            }).replace(/ and /g, ' && ').replace(/ or /g, ' || ').replace(/ = /g, ' == ');\n        }\n    }, {\n        key: 'vars',\n        value: (function (_vars) {\n            function vars() {\n                return _vars.apply(this, arguments);\n            }\n\n            vars.toString = function () {\n                return _vars.toString();\n            };\n\n            return vars;\n        })(function () {\n            var vars = [];\n            if (this.i) vars.push('i = s[0]');\n            if (this.f || this.v) vars.push('f = s[1] || \\'\\'');\n            if (this.t) vars.push('t = (s[1] || \\'\\').replace(/0+$/, \\'\\')');\n            if (this.v) vars.push('v = f.length');\n            if (this.v0) vars.push('v0 = !s[1]');\n            if (this.t0 || this.n10 || this.n100) vars.push('t0 = Number(s[0]) == n');\n            for (var k in this) {\n                if (/^.10+$/.test(k)) {\n                    var k0 = k[0] === 'n' ? 't0 && s[0]' : k[0];\n                    vars.push('' + k + ' = ' + k0 + '.slice(-' + k.substr(2).length + ')');\n                }\n            }if (!vars.length) return '';\n            return 'var ' + ['s = String(n).split(\\'.\\')'].concat(vars).join(', ');\n        })\n    }]);\n\n    return Parser;\n})();\n\n\n\nvar MakePlural = (function () {\n    function MakePlural(lc) {\n        var _ref = arguments[1] === undefined ? MakePlural : arguments[1];\n\n        var cardinals = _ref.cardinals;\n        var ordinals = _ref.ordinals;\n\n        _classCallCheck(this, MakePlural);\n\n        if (!cardinals && !ordinals) throw new Error('At least one type of plural is required');\n        this.lc = lc;\n        this.categories = { cardinal: [], ordinal: [] };\n        this.parser = new Parser();\n        \n        this.fn = this.buildFunction(cardinals, ordinals);\n        this.fn._obj = this;\n        this.fn.categories = this.categories;\n        \n        this.fn.toString = this.fnToString.bind(this);\n        return this.fn;\n    }\n\n    _createClass(MakePlural, [{\n        key: 'compile',\n        value: function compile(type, req) {\n            var cases = [];\n            var rules = MakePlural.rules[type][this.lc];\n            if (!rules) {\n                if (req) throw new Error('Locale \"' + this.lc + '\" ' + type + ' rules not found');\n                this.categories[type] = ['other'];\n                return '\\'other\\'';\n            }\n            for (var r in rules) {\n                var _rules$r$trim$split = rules[r].trim().split(/\\s*@\\w*/);\n\n                var _rules$r$trim$split2 = _toArray(_rules$r$trim$split);\n\n                var cond = _rules$r$trim$split2[0];\n                var examples = _rules$r$trim$split2.slice(1);\n                var cat = r.replace('pluralRule-count-', '');\n                if (cond) cases.push([this.parser.parse(cond), cat]);\n                \n            }\n            this.categories[type] = cases.map(function (c) {\n                return c[1];\n            }).concat('other');\n            if (cases.length === 1) {\n                return '(' + cases[0][0] + ') ? \\'' + cases[0][1] + '\\' : \\'other\\'';\n            } else {\n                return [].concat(_toConsumableArray(cases.map(function (c) {\n                    return '(' + c[0] + ') ? \\'' + c[1] + '\\'';\n                })), ['\\'other\\'']).join('\\n      : ');\n            }\n        }\n    }, {\n        key: 'buildFunction',\n        value: function buildFunction(cardinals, ordinals) {\n            var _this3 = this;\n\n            var compile = function compile(c) {\n                return c ? (c[1] ? 'return ' : 'if (ord) return ') + _this3.compile.apply(_this3, _toConsumableArray(c)) : '';\n            },\n                fold = { vars: function vars(str) {\n                    return ('  ' + str + ';').replace(/(.{1,78})(,|$) ?/g, '$1$2\\n      ');\n                },\n                cond: function cond(str) {\n                    return ('  ' + str + ';').replace(/(.{1,78}) (\\|\\| |$) ?/gm, '$1\\n          $2');\n                } },\n                cond = [ordinals && ['ordinal', !cardinals], cardinals && ['cardinal', true]].map(compile).map(fold.cond),\n                body = [fold.vars(this.parser.vars())].concat(_toConsumableArray(cond)).join('\\n').replace(/\\s+$/gm, '').replace(/^[\\s;]*[\\r\\n]+/gm, ''),\n                args = ordinals && cardinals ? 'n, ord' : 'n';\n            return new Function(args, body);\n        }\n    }, {\n        key: 'fnToString',\n        value: function fnToString(name) {\n            return Function.prototype.toString.call(this.fn).replace(/^function( \\w+)?/, name ? 'function ' + name : 'function').replace('\\n/**/', '');\n        }\n    }], [{\n        key: 'load',\n        value: function load() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            args.forEach(function (cldr) {\n                var data = cldr && cldr.supplemental || null;\n                if (!data) throw new Error('Data does not appear to be CLDR data');\n                MakePlural.rules = {\n                    cardinal: data['plurals-type-cardinal'] || MakePlural.rules.cardinal,\n                    ordinal: data['plurals-type-ordinal'] || MakePlural.rules.ordinal\n                };\n            });\n            return MakePlural;\n        }\n    }]);\n\n    return MakePlural;\n})();\n\n\n\nMakePlural.cardinals = true;\nMakePlural.ordinals = false;\nMakePlural.rules = { cardinal: {}, ordinal: {} };\n\n\nreturn MakePlural;\n}());\n/* jshint ignore:end */\n\n\nvar validateParameterTypeNumber = function( value, name ) {\n\tvalidateParameterType(\n\t\tvalue,\n\t\tname,\n\t\tvalue === undefined || typeof value === \"number\",\n\t\t\"Number\"\n\t);\n};\n\n\n\n\nvar validateParameterTypePluralType = function( value, name ) {\n\tvalidateParameterType(\n\t\tvalue,\n\t\tname,\n\t\tvalue === undefined || value === \"cardinal\" || value === \"ordinal\",\n\t\t\"String \\\"cardinal\\\" or \\\"ordinal\\\"\"\n\t);\n};\n\n\n\n\nvar pluralGeneratorFn = function( plural ) {\n\treturn function pluralGenerator( value ) {\n\t\tvalidateParameterPresence( value, \"value\" );\n\t\tvalidateParameterTypeNumber( value, \"value\" );\n\n\t\treturn plural( value );\n\t};\n};\n\n\n\n\n/**\n * .plural( value )\n *\n * @value [Number]\n *\n * Return the corresponding form (zero | one | two | few | many | other) of a\n * value given locale.\n */\nGlobalize.plural =\nGlobalize.prototype.plural = function( value, options ) {\n\tvalidateParameterPresence( value, \"value\" );\n\tvalidateParameterTypeNumber( value, \"value\" );\n\treturn this.pluralGenerator( options )( value );\n};\n\n/**\n * .pluralGenerator( [options] )\n *\n * Return a plural function (of the form below).\n *\n * fn( value )\n *\n * @value [Number]\n *\n * Return the corresponding form (zero | one | two | few | many | other) of a value given the\n * default/instance locale.\n */\nGlobalize.pluralGenerator =\nGlobalize.prototype.pluralGenerator = function( options ) {\n\tvar args, cldr, isOrdinal, plural, returnFn, type;\n\n\tvalidateParameterTypePlainObject( options, \"options\" );\n\n\toptions = options || {};\n\tcldr = this.cldr;\n\n\targs = [ options ];\n\ttype = options.type || \"cardinal\";\n\n\tvalidateParameterTypePluralType( options.type, \"options.type\" );\n\n\tvalidateDefaultLocale( cldr );\n\n\tisOrdinal = type === \"ordinal\";\n\n\tcldr.on( \"get\", validateCldr );\n\ttry {\n\t\tcldr.supplemental([ \"plurals-type-\" + type, \"{language}\" ]);\n\t} finally {\n\t\tcldr.off( \"get\", validateCldr );\n\t}\n\n\tMakePlural.rules = {};\n\tMakePlural.rules[ type ] = cldr.supplemental( \"plurals-type-\" + type );\n\n\tplural = new MakePlural( cldr.attributes.language, {\n\t\t\"ordinals\": isOrdinal,\n\t\t\"cardinals\": !isOrdinal\n\t});\n\n\treturnFn = pluralGeneratorFn( plural );\n\n\truntimeBind( args, cldr, returnFn, [ plural ] );\n\n\treturn returnFn;\n};\n\nreturn Globalize;\n\n\n\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/globalize/dist/globalize/plural.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}}],"sources":{"../node_modules/globalize/dist/globalize/plural.js":"/**\n * Globalize v1.5.0\n *\n * http://github.com/jquery/globalize\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2020-03-25T12:19Z\n */\n/*!\n * Globalize v1.5.0 2020-03-25T12:19Z Released under the MIT license\n * http://git.io/TrdQbw\n */\n(function( root, factory ) {\n\n\t// UMD returnExports\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD\n\t\tdefine([\n\t\t\t\"cldr\",\n\t\t\t\"../globalize\",\n\t\t\t\"cldr/event\",\n\t\t\t\"cldr/supplemental\"\n\t\t], factory );\n\t} else if ( typeof exports === \"object\" ) {\n\n\t\t// Node, CommonJS\n\t\tmodule.exports = factory( require( \"cldrjs\" ), require( \"../globalize\" ) );\n\t} else {\n\n\t\t// Global\n\t\tfactory( root.Cldr, root.Globalize );\n\t}\n}(this, function( Cldr, Globalize ) {\n\nvar runtimeBind = Globalize._runtimeBind,\n\tvalidateCldr = Globalize._validateCldr,\n\tvalidateDefaultLocale = Globalize._validateDefaultLocale,\n\tvalidateParameterPresence = Globalize._validateParameterPresence,\n\tvalidateParameterType = Globalize._validateParameterType,\n\tvalidateParameterTypePlainObject = Globalize._validateParameterTypePlainObject;\nvar MakePlural;\n/* jshint ignore:start */\nMakePlural = (function() {\n'use strict';\n\nvar _toArray = function (arr) { return Array.isArray(arr) ? arr : Array.from(arr); };\n\nvar _toConsumableArray = function (arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\n/**\n * make-plural.js -- https://github.com/eemeli/make-plural.js/\n * Copyright (c) 2014-2015 by Eemeli Aro <eemeli@gmail.com>\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * The software is provided \"as is\" and the author disclaims all warranties\n * with regard to this software including all implied warranties of\n * merchantability and fitness. In no event shall the author be liable for\n * any special, direct, indirect, or consequential damages or any damages\n * whatsoever resulting from loss of use, data or profits, whether in an\n * action of contract, negligence or other tortious action, arising out of\n * or in connection with the use or performance of this software.\n */\n\nvar Parser = (function () {\n    function Parser() {\n        _classCallCheck(this, Parser);\n    }\n\n    _createClass(Parser, [{\n        key: 'parse',\n        value: function parse(cond) {\n            var _this = this;\n\n            if (cond === 'i = 0 or n = 1') {\n                return 'n >= 0 && n <= 1';\n            }if (cond === 'i = 0,1') {\n                return 'n >= 0 && n < 2';\n            }if (cond === 'i = 1 and v = 0') {\n                this.v0 = 1;\n                return 'n == 1 && v0';\n            }\n            return cond.replace(/([tv]) (!?)= 0/g, function (m, sym, noteq) {\n                var sn = sym + '0';\n                _this[sn] = 1;\n                return noteq ? '!' + sn : sn;\n            }).replace(/\\b[fintv]\\b/g, function (m) {\n                _this[m] = 1;\n                return m;\n            }).replace(/([fin]) % (10+)/g, function (m, sym, num) {\n                var sn = sym + num;\n                _this[sn] = 1;\n                return sn;\n            }).replace(/n10+ = 0/g, 't0 && $&').replace(/(\\w+ (!?)= )([0-9.]+,[0-9.,]+)/g, function (m, se, noteq, x) {\n                if (m === 'n = 0,1') return '(n == 0 || n == 1)';\n                if (noteq) return se + x.split(',').join(' && ' + se);\n                return '(' + se + x.split(',').join(' || ' + se) + ')';\n            }).replace(/(\\w+) (!?)= ([0-9]+)\\.\\.([0-9]+)/g, function (m, sym, noteq, x0, x1) {\n                if (Number(x0) + 1 === Number(x1)) {\n                    if (noteq) return '' + sym + ' != ' + x0 + ' && ' + sym + ' != ' + x1;\n                    return '(' + sym + ' == ' + x0 + ' || ' + sym + ' == ' + x1 + ')';\n                }\n                if (noteq) return '(' + sym + ' < ' + x0 + ' || ' + sym + ' > ' + x1 + ')';\n                if (sym === 'n') {\n                    _this.t0 = 1;return '(t0 && n >= ' + x0 + ' && n <= ' + x1 + ')';\n                }\n                return '(' + sym + ' >= ' + x0 + ' && ' + sym + ' <= ' + x1 + ')';\n            }).replace(/ and /g, ' && ').replace(/ or /g, ' || ').replace(/ = /g, ' == ');\n        }\n    }, {\n        key: 'vars',\n        value: (function (_vars) {\n            function vars() {\n                return _vars.apply(this, arguments);\n            }\n\n            vars.toString = function () {\n                return _vars.toString();\n            };\n\n            return vars;\n        })(function () {\n            var vars = [];\n            if (this.i) vars.push('i = s[0]');\n            if (this.f || this.v) vars.push('f = s[1] || \\'\\'');\n            if (this.t) vars.push('t = (s[1] || \\'\\').replace(/0+$/, \\'\\')');\n            if (this.v) vars.push('v = f.length');\n            if (this.v0) vars.push('v0 = !s[1]');\n            if (this.t0 || this.n10 || this.n100) vars.push('t0 = Number(s[0]) == n');\n            for (var k in this) {\n                if (/^.10+$/.test(k)) {\n                    var k0 = k[0] === 'n' ? 't0 && s[0]' : k[0];\n                    vars.push('' + k + ' = ' + k0 + '.slice(-' + k.substr(2).length + ')');\n                }\n            }if (!vars.length) return '';\n            return 'var ' + ['s = String(n).split(\\'.\\')'].concat(vars).join(', ');\n        })\n    }]);\n\n    return Parser;\n})();\n\n\n\nvar MakePlural = (function () {\n    function MakePlural(lc) {\n        var _ref = arguments[1] === undefined ? MakePlural : arguments[1];\n\n        var cardinals = _ref.cardinals;\n        var ordinals = _ref.ordinals;\n\n        _classCallCheck(this, MakePlural);\n\n        if (!cardinals && !ordinals) throw new Error('At least one type of plural is required');\n        this.lc = lc;\n        this.categories = { cardinal: [], ordinal: [] };\n        this.parser = new Parser();\n        \n        this.fn = this.buildFunction(cardinals, ordinals);\n        this.fn._obj = this;\n        this.fn.categories = this.categories;\n        \n        this.fn.toString = this.fnToString.bind(this);\n        return this.fn;\n    }\n\n    _createClass(MakePlural, [{\n        key: 'compile',\n        value: function compile(type, req) {\n            var cases = [];\n            var rules = MakePlural.rules[type][this.lc];\n            if (!rules) {\n                if (req) throw new Error('Locale \"' + this.lc + '\" ' + type + ' rules not found');\n                this.categories[type] = ['other'];\n                return '\\'other\\'';\n            }\n            for (var r in rules) {\n                var _rules$r$trim$split = rules[r].trim().split(/\\s*@\\w*/);\n\n                var _rules$r$trim$split2 = _toArray(_rules$r$trim$split);\n\n                var cond = _rules$r$trim$split2[0];\n                var examples = _rules$r$trim$split2.slice(1);\n                var cat = r.replace('pluralRule-count-', '');\n                if (cond) cases.push([this.parser.parse(cond), cat]);\n                \n            }\n            this.categories[type] = cases.map(function (c) {\n                return c[1];\n            }).concat('other');\n            if (cases.length === 1) {\n                return '(' + cases[0][0] + ') ? \\'' + cases[0][1] + '\\' : \\'other\\'';\n            } else {\n                return [].concat(_toConsumableArray(cases.map(function (c) {\n                    return '(' + c[0] + ') ? \\'' + c[1] + '\\'';\n                })), ['\\'other\\'']).join('\\n      : ');\n            }\n        }\n    }, {\n        key: 'buildFunction',\n        value: function buildFunction(cardinals, ordinals) {\n            var _this3 = this;\n\n            var compile = function compile(c) {\n                return c ? (c[1] ? 'return ' : 'if (ord) return ') + _this3.compile.apply(_this3, _toConsumableArray(c)) : '';\n            },\n                fold = { vars: function vars(str) {\n                    return ('  ' + str + ';').replace(/(.{1,78})(,|$) ?/g, '$1$2\\n      ');\n                },\n                cond: function cond(str) {\n                    return ('  ' + str + ';').replace(/(.{1,78}) (\\|\\| |$) ?/gm, '$1\\n          $2');\n                } },\n                cond = [ordinals && ['ordinal', !cardinals], cardinals && ['cardinal', true]].map(compile).map(fold.cond),\n                body = [fold.vars(this.parser.vars())].concat(_toConsumableArray(cond)).join('\\n').replace(/\\s+$/gm, '').replace(/^[\\s;]*[\\r\\n]+/gm, ''),\n                args = ordinals && cardinals ? 'n, ord' : 'n';\n            return new Function(args, body);\n        }\n    }, {\n        key: 'fnToString',\n        value: function fnToString(name) {\n            return Function.prototype.toString.call(this.fn).replace(/^function( \\w+)?/, name ? 'function ' + name : 'function').replace('\\n/**/', '');\n        }\n    }], [{\n        key: 'load',\n        value: function load() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            args.forEach(function (cldr) {\n                var data = cldr && cldr.supplemental || null;\n                if (!data) throw new Error('Data does not appear to be CLDR data');\n                MakePlural.rules = {\n                    cardinal: data['plurals-type-cardinal'] || MakePlural.rules.cardinal,\n                    ordinal: data['plurals-type-ordinal'] || MakePlural.rules.ordinal\n                };\n            });\n            return MakePlural;\n        }\n    }]);\n\n    return MakePlural;\n})();\n\n\n\nMakePlural.cardinals = true;\nMakePlural.ordinals = false;\nMakePlural.rules = { cardinal: {}, ordinal: {} };\n\n\nreturn MakePlural;\n}());\n/* jshint ignore:end */\n\n\nvar validateParameterTypeNumber = function( value, name ) {\n\tvalidateParameterType(\n\t\tvalue,\n\t\tname,\n\t\tvalue === undefined || typeof value === \"number\",\n\t\t\"Number\"\n\t);\n};\n\n\n\n\nvar validateParameterTypePluralType = function( value, name ) {\n\tvalidateParameterType(\n\t\tvalue,\n\t\tname,\n\t\tvalue === undefined || value === \"cardinal\" || value === \"ordinal\",\n\t\t\"String \\\"cardinal\\\" or \\\"ordinal\\\"\"\n\t);\n};\n\n\n\n\nvar pluralGeneratorFn = function( plural ) {\n\treturn function pluralGenerator( value ) {\n\t\tvalidateParameterPresence( value, \"value\" );\n\t\tvalidateParameterTypeNumber( value, \"value\" );\n\n\t\treturn plural( value );\n\t};\n};\n\n\n\n\n/**\n * .plural( value )\n *\n * @value [Number]\n *\n * Return the corresponding form (zero | one | two | few | many | other) of a\n * value given locale.\n */\nGlobalize.plural =\nGlobalize.prototype.plural = function( value, options ) {\n\tvalidateParameterPresence( value, \"value\" );\n\tvalidateParameterTypeNumber( value, \"value\" );\n\treturn this.pluralGenerator( options )( value );\n};\n\n/**\n * .pluralGenerator( [options] )\n *\n * Return a plural function (of the form below).\n *\n * fn( value )\n *\n * @value [Number]\n *\n * Return the corresponding form (zero | one | two | few | many | other) of a value given the\n * default/instance locale.\n */\nGlobalize.pluralGenerator =\nGlobalize.prototype.pluralGenerator = function( options ) {\n\tvar args, cldr, isOrdinal, plural, returnFn, type;\n\n\tvalidateParameterTypePlainObject( options, \"options\" );\n\n\toptions = options || {};\n\tcldr = this.cldr;\n\n\targs = [ options ];\n\ttype = options.type || \"cardinal\";\n\n\tvalidateParameterTypePluralType( options.type, \"options.type\" );\n\n\tvalidateDefaultLocale( cldr );\n\n\tisOrdinal = type === \"ordinal\";\n\n\tcldr.on( \"get\", validateCldr );\n\ttry {\n\t\tcldr.supplemental([ \"plurals-type-\" + type, \"{language}\" ]);\n\t} finally {\n\t\tcldr.off( \"get\", validateCldr );\n\t}\n\n\tMakePlural.rules = {};\n\tMakePlural.rules[ type ] = cldr.supplemental( \"plurals-type-\" + type );\n\n\tplural = new MakePlural( cldr.attributes.language, {\n\t\t\"ordinals\": isOrdinal,\n\t\t\"cardinals\": !isOrdinal\n\t});\n\n\treturnFn = pluralGeneratorFn( plural );\n\n\truntimeBind( args, cldr, returnFn, [ plural ] );\n\n\treturn returnFn;\n};\n\nreturn Globalize;\n\n\n\n\n}));\n"},"lineCount":378}},"error":null,"hash":"2de8263a3c03807947d5c38f3efa6b23","cacheData":{"env":{}}}
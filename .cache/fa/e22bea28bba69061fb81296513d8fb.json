{"id":"../node_modules/blob-stream/index.js","dependencies":[{"name":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/package.json","includedInParent":true,"mtime":1595955025549},{"name":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/blob-stream/package.json","includedInParent":true,"mtime":1595955025108},{"name":"stream","loc":{"line":1,"column":29},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/blob-stream/index.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/stream-browserify/index.js"},{"name":"util","loc":{"line":2,"column":19},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/blob-stream/index.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/util/util.js"},{"name":"blob","loc":{"line":3,"column":19},"parent":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/blob-stream/index.js","resolved":"/Users/daviddiaz/Documents/GitHub/reservaloWeb/node_modules/blob/index.js"}],"generated":{"js":"var global = arguments[3];\nvar WritableStream = require('stream').Writable;\nvar util = require('util');\nvar Blob = require('blob');\nvar URL = global.URL || global.webkitURL || global.mozURL;\n\nfunction BlobStream() {\n  if (!(this instanceof BlobStream))\n    return new BlobStream;\n    \n  WritableStream.call(this);\n  this._chunks = [];\n  this._blob = null;\n  this.length = 0;\n}\n\nutil.inherits(BlobStream, WritableStream);\n\nBlobStream.prototype._write = function(chunk, encoding, callback) {\n  // convert chunks to Uint8Arrays (e.g. Buffer when array fallback is being used)\n  if (!(chunk instanceof Uint8Array))\n    chunk = new Uint8Array(chunk);\n    \n  this.length += chunk.length;\n  this._chunks.push(chunk);\n  callback();\n};\n\nBlobStream.prototype.toBlob = function(type) {\n  type = type || 'application/octet-stream';\n  \n  // cache the blob if needed\n  if (!this._blob) {\n    this._blob = new Blob(this._chunks, {\n      type: type\n    });\n    \n    this._chunks = []; // free memory\n  }\n  \n  // if the cached blob's type doesn't match the requested type, make a new blob\n  if (this._blob.type !== type)\n    this._blob = new Blob([this._blob], { type: type });\n  \n  return this._blob;\n};\n\nBlobStream.prototype.toBlobURL = function(type) {\n  return URL.createObjectURL(this.toBlob(type));\n};\n\nmodule.exports = BlobStream;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/blob-stream/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/blob-stream/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}}],"sources":{"../node_modules/blob-stream/index.js":"var WritableStream = require('stream').Writable;\nvar util = require('util');\nvar Blob = require('blob');\nvar URL = global.URL || global.webkitURL || global.mozURL;\n\nfunction BlobStream() {\n  if (!(this instanceof BlobStream))\n    return new BlobStream;\n    \n  WritableStream.call(this);\n  this._chunks = [];\n  this._blob = null;\n  this.length = 0;\n}\n\nutil.inherits(BlobStream, WritableStream);\n\nBlobStream.prototype._write = function(chunk, encoding, callback) {\n  // convert chunks to Uint8Arrays (e.g. Buffer when array fallback is being used)\n  if (!(chunk instanceof Uint8Array))\n    chunk = new Uint8Array(chunk);\n    \n  this.length += chunk.length;\n  this._chunks.push(chunk);\n  callback();\n};\n\nBlobStream.prototype.toBlob = function(type) {\n  type = type || 'application/octet-stream';\n  \n  // cache the blob if needed\n  if (!this._blob) {\n    this._blob = new Blob(this._chunks, {\n      type: type\n    });\n    \n    this._chunks = []; // free memory\n  }\n  \n  // if the cached blob's type doesn't match the requested type, make a new blob\n  if (this._blob.type !== type)\n    this._blob = new Blob([this._blob], { type: type });\n  \n  return this._blob;\n};\n\nBlobStream.prototype.toBlobURL = function(type) {\n  return URL.createObjectURL(this.toBlob(type));\n};\n\nmodule.exports = BlobStream;\n"},"lineCount":53}},"error":null,"hash":"aa7fd3467f448e2834676809f2bcbd53","cacheData":{"env":{}}}